import { TextReader } from "./textReader";
export type VALID_KEY_T = 
    'intro1' | 'intro2' | 'intro3' |
    'case' | 'feedbacks1' | 'feedbacks2' |
    'letstry' | 'notready' | 'question' |
    'ready' | 'reasons1' | 'reasons2' | 'letsgo' | 'okay' | 'reasons3' | 'stillnotready' | 'wantmore' | 'notforme' | 'feedbacks3';

export const VALID_KEYS: VALID_KEY_T[] = [
    'intro1', 'intro2','intro3',
    'case', 'feedbacks1', 'feedbacks2',
    'letstry', 'notready', 'question',
    'ready', 'reasons1', 'reasons2', 'okay', 'reasons3', 'stillnotready', 'wantmore', 'letsgo', 'notforme', 'feedbacks3'
];

export class TextDB {
    private db: Map<VALID_KEY_T, string>;
    private responseDb: Map<string, VALID_KEY_T>;
    constructor() {
        this.db = new Map<VALID_KEY_T, string>();
        this.responseDb = new Map<string, VALID_KEY_T>();
        this.init = this.init.bind(this);
        this.get = this.get.bind(this);
        this.getRes = this.getRes.bind(this);
        this.init();
    }

    private async init() {
        VALID_KEYS.forEach(async key => {
            const text = await TextReader.read(`${key}.txt`);
            this.db.set(key, text);
        });
        this.responseDb.set('–ï—Å—Ç—å —Ç–∞–∫–æ–µ üò¢', 'letsgo');
        this.responseDb.set('–∏–¥–µ–º!', 'feedbacks1');
        this.responseDb.set('–ö—Ä—É—Ç–æ!)', 'case');
        this.responseDb.set('–ë–ª–∏–Ω, –∫—Ä—É—Ç–æ!üò≠', 'reasons1');
        this.responseDb.set('–•–æ—á—É —Ç—É–¥–∞üòå', 'reasons2');
        this.responseDb.set('–•–æ—á—É –ø—Ä–æ–≥–Ω–æ–∑', 'letstry');
        this.responseDb.set('–ù–µ—Ç, —è –Ω–µ –≥–æ—Ç–æ–≤ –∫ –ø–µ—Ä–µ–º–µ–Ω–∞–º', 'notready');
        this.responseDb.set('–î–∞, –Ω–µ –≥–æ—Ç–æ–≤!', 'stillnotready');
        this.responseDb.set('–î–∞–≤–∞–π –ø–æ–ø—Ä–æ–±—É–µ–º)', 'letstry');
        this.responseDb.set('–•–æ—á—É –±–æ–ª—å—à–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø—Ä–æ –ø—Ä–æ–≥–Ω–æ–∑.', 'wantmore');
        this.responseDb.set('–ù–µ—Ç, –ø–æ–∫–∞ —á—Ç–æ —ç—Ç–æ –Ω–µ –¥–ª—è –º–µ–Ω—è!', 'notforme');
    }

    public get(key: VALID_KEY_T): string {
        return this.db.get(key);
    }

    public getRes(text: string): VALID_KEY_T {
        return this.responseDb.get(text);
    }
}